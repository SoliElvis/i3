# i3 config file for frederic boileau
#
exec source ~/.profile
set $mod Mod4
for_window [class=".*"] border pixel 4
font pango:monospace 10
gaps inner 15
gaps outer 15
set $term termite
set $browser brave
exec_always adjustScreen
exec_always feh --bg-scale "/home/sole/Pictures/rain.jpg"



exec source ~/.bashrc
exec source ~/.zshrc

# exec mpd
# exec deluged
exec unclutter
exec compton

bindsym $mod+Tab workspace next
bindsym $mod+Shift+c reload
bindsym $mod+Shift+r restart
bindsym $mod+Shift+e exec "emacsclient -c"
bindsym $mod+q kill
bindsym $mod+Shift+q exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

###---Basic definitions---###
# Use Mouse+$mod to drag floating windows to their wanted position
bindsym $mod+Return exec termite
# start dmenu (a program launcher)
#bindsym $mod+d exec dmenu_run
bindsym $mod+d exec --no-startup-id rofi -show run
bindsym $mod+w exec --no-startup-id rofi -show window



bindsym $mod+Shift+b exec ~/apps/i3-focus-last switch
exec --no-startup-id "~/apps/i3-focus-last"


# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right
bindsym $mod+Shift+h move left 20
bindsym $mod+Shift+j move down 20
bindsym $mod+Shift+k move up 20
bindsym $mod+Shift+l move right 19
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
bindsym $mod+O split vertical
bindsym $mod+P split horizontal
bindsym $mod+f fullscreen toggle
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+e layout toggle split
bindsym $mod+Shift+space floating toggle
bindsym $mod+space focus mode_toggle
bindsym $mod+u focus parent
bindsym $mod+semicolon focus child

set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5:reading"
set $ws6 "6:media-proc"
set $ws7 "7:ssh"
set $ws8 "8:background"
set $ws9 "9:main"
set $ws10 "10:prog"

bindsym $mod+b workspace back_and_forth
#bindsym $mod+Shift+b move container to workspace back_and_forth
# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# resize window (you can also use the mouse for that)
mode "resize" {
# These bindings trigger as soon as you enter the resize mode

# Pressing left will shrink the window’s width.
# Pressing right will grow the window’s width.
# Pressing up will shrink the window’s height.
# Pressing down will grow the window’s height.
	bindsym h resize shrink width 10 px or 10 ppt
		bindsym j resize grow height 10 px or 10 ppt
		bindsym k resize shrink height 10 px or 10 ppt
		bindsym l resize grow width 10 px or 10 ppt

# same bindings, but for the arrow keys
		bindsym Left resize shrink width 10 px or 10 ppt
		bindsym Down resize grow height 10 px or 10 ppt
		bindsym Up resize shrink height 10 px or 10 ppt
		bindsym Right resize grow width 10 px or 10 ppt

# back to normal: Enter or Escape or $mod+r
		bindsym Return mode "default"
		bindsym Escape mode "default"
		bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
	bindsym o      mode "$mode_gaps_outer"
		bindsym i      mode "$mode_gaps_inner"
		bindsym h      mode "$mode_gaps_horiz"
		bindsym v      mode "$mode_gaps_verti"
		bindsym t      mode "$mode_gaps_top"
		bindsym r      mode "$mode_gaps_right"
		bindsym b      mode "$mode_gaps_bottom"
		bindsym l      mode "$mode_gaps_left"
		bindsym Return mode "$mode_gaps"
		bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
	bindsym plus  gaps outer current plus 5
		bindsym minus gaps outer current minus 5
		bindsym 0     gaps outer current set 0

		bindsym Shift+plus  gaps outer all plus 5
		bindsym Shift+minus gaps outer all minus 5
		bindsym Shift+0     gaps outer all set 0

		bindsym Return mode "$mode_gaps"
		bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
	bindsym plus  gaps inner current plus 5
		bindsym minus gaps inner current minus 5
		bindsym 0     gaps inner current set 0

		bindsym Shift+plus  gaps inner all plus 5
		bindsym Shift+minus gaps inner all minus 5
		bindsym Shift+0     gaps inner all set 0

		bindsym Return mode "$mode_gaps"
		bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
	bindsym plus  gaps horizontal current plus 5
		bindsym minus gaps horizontal current minus 5
		bindsym 0     gaps horizontal current set 0

		bindsym Shift+plus  gaps horizontal all plus 5
		bindsym Shift+minus gaps horizontal all minus 5
		bindsym Shift+0     gaps horizontal all set 0

		bindsym Return mode "$mode_gaps"
		bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
	bindsym plus  gaps vertical current plus 5
		bindsym minus gaps vertical current minus 5
		bindsym 0     gaps vertical current set 0

		bindsym Shift+plus  gaps vertical all plus 5
		bindsym Shift+minus gaps vertical all minus 5
		bindsym Shift+0     gaps vertical all set 0

		bindsym Return mode "$mode_gaps"
		bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
	bindsym plus  gaps top current plus 5
		bindsym minus gaps top current minus 5
		bindsym 0     gaps top current set 0

		bindsym Shift+plus  gaps top all plus 5
		bindsym Shift+minus gaps top all minus 5
		bindsym Shift+0     gaps top all set 0

		bindsym Return mode "$mode_gaps"
		bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
	bindsym plus  gaps right current plus 5
		bindsym minus gaps right current minus 5
		bindsym 0     gaps right current set 0

		bindsym Shift+plus  gaps right all plus 5
		bindsym Shift+minus gaps right all minus 5
		bindsym Shift+0     gaps right all set 0

		bindsym Return mode "$mode_gaps"
		bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
	bindsym plus  gaps bottom current plus 5
		bindsym minus gaps bottom current minus 5
		bindsym 0     gaps bottom current set 0

		bindsym Shift+plus  gaps bottom all plus 5
		bindsym Shift+minus gaps bottom all minus 5
		bindsym Shift+0     gaps bottom all set 0

		bindsym Return mode "$mode_gaps"
		bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
	bindsym plus  gaps left current plus 5
		bindsym minus gaps left current minus 5
		bindsym 0     gaps left current set 0

		bindsym Shift+plus  gaps left all plus 5
		bindsym Shift+minus gaps left all minus 5
		bindsym Shift+0     gaps left all set 0

		bindsym Return mode "$mode_gaps"
		bindsym Escape mode "default"
}

bar {
	font pango:DejaVu Sans Mono, FontAwesome 12
		position top
		status_command /home/sole/dotfiles/i3stuff/bumblebee-status/bumblebee-status -m   date time  cpu memory battery  pasink pasource -p time.format="%H:%M" -t solarized
		tray_output VGA1

		colors {
			background          $bg
				statusline          $fg
				separator           $hi
				focused_workspace   $gn        $bg        $ac
				active_workspace    $gn        $ac        $tx
				inactive_workspace  $bg        $bg        $ia
				urgent_workspace    $rd        $bg        $ac
		}
}
set $Locker i3lock && sleep 1

set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
	bindsym l exec --no-startup-id $Locker, mode "default"
		bindsym e exec --no-startup-id i3-msg exit, mode "default"
		bindsym s exec --no-startup-id $Locker && systemctl suspend, mode "default"
		bindsym h exec --no-startup-id $Locker && systemctl hibernate, mode "default"
		bindsym r exec --no-startup-id systemctl reboot, mode "default"
		bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"

# back to normal: Enter or Escape
		bindsym Return mode "default"
		bindsym Escape mode "default"
}

bindsym $mod+Shift+s mode "$mode_system"
exec xautolock -time 20 -locker "i3lock -i '~/Pictures/rain2.jpg' &"

# color defines for zenburn styled i3
set $bg     #2c2c2e
set $fg     #9f9f9f
set $hi     #efef8f
set $ac     #a0afa0
set $tx     #040404
set $ia     #8f8f8f
set $be     #8faf9f
set $yw     #ccdc90
set $gn     #88b090
set $rd     #e89393

# set some nice colors      border     background  text
client.focused              $ac        $ac         $tx
client.unfocused            $bg        $bg         $ia
client.focused_inactive     $bg        $bg         $ac
client.urgent               $rd        $rd         $tx

